{% extends 'base.html.twig' %}

{% block title %}
    {{ post.title }}
{% endblock %}

{% block content %}


    <section class="section-post">

        <article class="animated slideInUp ml-0">
            <div class="title-card border border-dark text-center py-2">
                <h5>{{ post.title }}</h5>
            </div>

            {# Si je suis l'utilisateur qui a posté cette annonce je veux pouvoir la supprimer #}
            {% if post.user.id == app.user.id %}
                {{include('post/ad_post/delete.html.twig')}}
            {% endif %}

            <div>
                <div>
                    <p
                        id="editor1" class="mt-5 px-3">
                        {# truncate permet de réduire la taille du contenu du contenu de l'article et ajouter "..." après #}
                        {{ post.description|raw }}
                    </p>
                </div>
            </div>

            <div class="card-body d-flex justify-content-around flex-wrap">
                <div class="container1">
                    <img class="img-advicepost" src="{{ asset(picture_upload_path ~ (post.picture1 ?: 'marvel.jpg')) }}"  style="max-width:100%;cursor:pointer" onclick="onClick(this)">
                </div>
                <div class="container1">
                    <img class="img-advicepost" src="{{ asset(picture_upload_path ~ (post.picture2 ?: 'marvel.jpg')) }}"  style="max-width:100%;cursor:pointer" onclick="onClick(this)">
                </div>
                <div class="container1">
                    <img class="img-advicepost" src="{{ asset(picture_upload_path ~ (post.picture3 ?: 'marvel.jpg')) }}"  style="max-width:100%;cursor:pointer" onclick="onClick(this)">
                </div>
            </div>

            <div id="modal01" class="modal" onclick="this.style.display='none'">
                <span class="close">&times;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <div class="modal-cont">
                    <img id="img01" style="max-width:100%">
                </div>
            </div>
            {# Pour les paramètres de onclick, si le status du post est == a BLOCKED alors le param = UNBLOCKED #}
            {% if is_granted('ROLE_USER_ADMIN') %}
                <button
                    type="button" class="btn btn-warning c" onclick="handleStatusButton(this,{{post.id}},{{post.status.code == 'BLOCKED' ? " 'UNBLOCKED' " : " 'BLOCKED' "}})">
                    {# Si le code du status du post est == a BLOCKED alors on ecrit Débloquer dans le bouton #}
                    <i class="fas fa-minus-circle"></i>
                    {{post.status.code == "BLOCKED" ? "Débloquer" : "Bloquer"}}
                </button>
            {% endif %}

            <div class="metadata mx-3 mb-3 d-flex justify-content-between">
                <div class="d-flex justify-content-start">
                    {% for tag in post.tags %}
                        <a href="{{ path('tag_show', {'slug': tag.slug }) }}" class="badge badge-pill amber lighten-2 mr-1">{{ tag.name }}</a>
                    {% endfor %}
                </div>

                <span class="font-italic text-muted">
                    Publié le
                    {{ post.createdAt | date('d/m/Y à H:i') }}
                    par
                    <a class="text-dark font-weight-bold" href="{{path('user_show', {'slug': post.user.slug }) }}">{{ post.user.username }}</a>
                </span>
            </div>

        </article>

        <div class="commentaire">

            <h5 class="card-title font-weight-bold text-center">Commentaires</h5>


            <div class="border border-dark">
                {% for comment in post.comments %}
                    {% if comment.status.code == "UNBLOCKED" %}
                        <div class="card-body">
                            {% if is_granted('ROLE_USER_ADMIN') %}
                                <button
                                    type="button" class="btn btn-warning mb-3" onclick="handleStatusButtonComment(this,{{comment.id}},{{comment.status.code == 'BLOCKED' ? " 'UNBLOCKED' " : " 'BLOCKED' "}})">
                                    {# Si le code du status du post est == a BLOCKED alors on ecrit Débloquer dans le bouton #}
                                    <i class="fas fa-minus-circle"></i>
                                    {{comment.status.code == "BLOCKED" ? "Débloquer" : "Bloquer"}}
                                </button>
                            {% endif %}
                            <p class="card-text">{{comment.description|raw}}</p>
                            <p class="card-text font-italic text-muted">Posté par
                                <a href="{{path ('user_show', {'slug': comment.user.slug }) }}">{{comment.user}}</a>
                                le
                                {{ comment.createdAt | date('d/m/Y à H:i') }}</p>
                            <hr>
                        </div>
                    {% else %}
                        <p>Il n'y a pas de commentaires pour le moment....</p>
                    {% endif %}
                {% endfor %}
            </div>

            {{ form_start(formComment) }}
            {{ form_widget(formComment) }}

            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-primary">Envoyer</button>
            </div>
        </div>
        {{ form_end(formComment) }}

    </section>

    <a class="text-dark text-center" href="{{ path('ad_post')}}">Revenir à la liste des annonces</a>

{% endblock %}
{% block javascripts %}
    <script>
        $(document).ready(function () {
            $('#editor1').ckeditor();
        });

        function setValue() {
            $('#editor1').val($('input#val').val());
        }
        // On récupère l'url de base du server grâce à window.location
        var baseUrl = window.location.origin;
        // Element = Element html du select que l'on a grâce au 'this' dans le onchange du select.
        // PostId = l'id de l'user envoyé en 2ème paramètre grâce à Twig
        function handleStatusButton(elementButton, postId, statusCode) {
            // console.log(postId);
            // console.log(window.location)
            console.log(baseUrl);
            // console.log(elementButton);
            // On utilise ajax pour faire une requête http en mode "rest" donc sans render
            $.ajax({
                method: "PATCH",
                url: baseUrl + "/backend/" + postId + "/status/" + statusCode,
                // En cas de succès on affiche un toast confirmant le changement de rôle du user.
                success: function (result) {
                    console.log(toastr);
                    toastr.success('Statut mis à jour');
                    elementButton.textContent = statusCode == "BLOCKED" ? "Débloquer" : "Bloquer";
                    elementButton.onclick = function () {
                        return handleStatusButton(elementButton, postId, statusCode == "BLOCKED" ? "UNBLOCKED" : "BLOCKED")
                    };
                },
                error: function () {
                    toastr.error('Impossible de mettre à jour le statut.')

                }
            });
        }
    </script>
    <script>
        function onClick(element) {
            document.getElementById("img01").src = element.src;
            document.getElementById("modal01").style.display = "block";
        }
    </script>
    <script>
        // On récupère l'url de base du server grâce à window.location
        var baseUrl = window.location.origin;
        // Element = Element html du select que l'on a grâce au 'this' dans le onchange du select.
        // PostId = l'id de l'user envoyé en 2ème paramètre grâce à Twig
        function handleStatusButtonComment(elementButton, commentId, statusCode) {
            // console.log(postId);
            // console.log(window.location)
            console.log(baseUrl);
            // console.log(elementButton);
            // On utilise ajax pour faire une requête http en mode "rest" donc sans render
            $.ajax({
                method: "PATCH",
                url: baseUrl + "/backend/comment/" + commentId + "/status/" + statusCode,
                // En cas de succès on affiche un toast confirmant le changement de rôle du user.
                success: function (result) {
                    console.log(toastr);
                    toastr.success('Statut mis à jour');
                    elementButton.textContent = statusCode == "BLOCKED" ? "Débloquer" : "Bloquer";
                    elementButton.onclick = function () {
                        return handleStatusButtonComment(elementButton, commentId, statusCode == "BLOCKED" ? "UNBLOCKED" : "BLOCKED")
                    };
                },
                error: function () {
                    toastr.error('Impossible de mettre à jour le statut.')

                }
            });
        }
    </script>
{% endblock %}
